{
  "openapi": "3.0.1",
  "info": {
    "title": "Movie Management API",
    "description": "API for managing movies with details like title, release date, genre, language, and oscar count.",
    "version": "1.0.0",
    "contact": {
      "name": "API Support",
      "email": "cauebrolesef@gmail.com"
    }
  },
  "servers": [
    {
      "url": "http://localhost:3000/api/v1",
      "description": "Local Development Server"
    }
  ],
  "tags": [
    {
      "name": "Movies",
      "description": "Operations related to movies"
    }
  ],
  "paths": {
    "/movies": {
      "get": {
        "tags": ["Movies"],
        "summary": "Retrieve a list of movies",
        "description": "Retrieve all movies, optionally filtered by genre.",
        "parameters": [
          {
            "name": "genre",
            "in": "query",
            "description": "Filter movies by genre name.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A list of movies",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Movie"
                  }
                }
              }
            }
          },
          "404": {
            "description": "No movies found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "post": {
        "tags": ["Movies"],
        "summary": "Create a new movie",
        "description": "Create a new movie with the specified details.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateMovieRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Movie created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Movie"
                }
              }
            }
          },
          "409": {
            "description": "Conflict, movie with the same title already exists"
          },
          "400": {
            "description": "Bad request, missing fields"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/movies/{id}": {
      "get": {
        "tags": ["Movies"],
        "summary": "Retrieve a single movie by ID",
        "description": "Retrieve a specific movie by its ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the movie to retrieve.",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Movie details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Movie"
                }
              }
            }
          },
          "404": {
            "description": "Movie not found"
          }
        }
      },
      "patch": {
        "tags": ["Movies"],
        "summary": "Update an existing movie",
        "description": "Update the details of an existing movie by ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the movie to update.",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateMovieRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Movie updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Movie"
                }
              }
            }
          },
          "400": {
            "description": "Bad request, invalid data"
          },
          "404": {
            "description": "Movie not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "delete": {
        "tags": ["Movies"],
        "summary": "Delete a movie",
        "description": "Delete a specific movie by ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the movie to delete.",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Movie deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Movie"
                }
              }
            }
          },
          "404": {
            "description": "Movie not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Movie": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Unique identifier for the movie."
          },
          "title": {
            "type": "string",
            "description": "Title of the movie."
          },
          "release_date": {
            "type": "string",
            "format": "date",
            "description": "Release date of the movie."
          },
          "genre_id": {
            "type": "integer",
            "description": "ID of the genre the movie belongs to."
          },
          "language_id": {
            "type": "integer",
            "description": "ID of the language the movie is in."
          },
          "oscar_count": {
            "type": "integer",
            "description": "Number of Oscars the movie has won."
          },
          "genres": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Genre"
            },
            "description": "List of genres associated with the movie."
          },
          "languages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Language"
            },
            "description": "List of languages associated with the movie."
          }
        }
      },
      "CreateMovieRequest": {
        "type": "object",
        "required": [
          "title",
          "release_date",
          "genre_id",
          "language_id",
          "oscar_count"
        ],
        "properties": {
          "title": {
            "type": "string",
            "description": "Title of the movie."
          },
          "release_date": {
            "type": "string",
            "format": "date",
            "description": "Release date of the movie."
          },
          "genre_id": {
            "type": "integer",
            "description": "ID of the genre the movie belongs to."
          },
          "language_id": {
            "type": "integer",
            "description": "ID of the language the movie is in."
          },
          "oscar_count": {
            "type": "integer",
            "description": "Number of Oscars the movie has won."
          }
        }
      },
      "UpdateMovieRequest": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "Title of the movie."
          },
          "release_date": {
            "type": "string",
            "format": "date",
            "description": "Release date of the movie."
          },
          "genre_id": {
            "type": "integer",
            "description": "ID of the genre the movie belongs to."
          },
          "language_id": {
            "type": "integer",
            "description": "ID of the language the movie is in."
          },
          "oscar_count": {
            "type": "integer",
            "description": "Number of Oscars the movie has won."
          }
        }
      },
      "Genre": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Unique identifier for the genre."
          },
          "name": {
            "type": "string",
            "description": "Name of the genre."
          }
        }
      },
      "Language": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Unique identifier for the language."
          },
          "name": {
            "type": "string",
            "description": "Name of the language."
          }
        }
      }
    },
    "responses": {
      "NotFound": {
        "description": "Resource not found."
      },
      "BadRequest": {
        "description": "Invalid request data."
      },
      "Conflict": {
        "description": "Resource already exists (e.g., duplicate title)."
      },
      "InternalServerError": {
        "description": "Server encountered an error while processing the request."
      }
    }
  }
}
